// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v5.x) (utils/Counters.sol)

pragma solidity ^0.8.20;

/**
 * @dev Simple counter utility that can be incremented, decremented, or reset.
 * Useful for tracking token IDs, request numbers, etc.
 *
 * NOTE: Since Solidity 0.8+ has built-in overflow checks, this library relies
 * on native arithmetic safety rather than SafeMath.
 */
library Counters {
    struct Counter {
        uint256 _value; // default: 0
    }

    /**
     * @dev Returns the current value of the counter.
     */
    function current(Counter storage counter) internal view returns (uint256) {
        return counter._value;
    }

    /**
     * @dev Increments the counter by 1.
     */
    function increment(Counter storage counter) internal {
        unchecked {
            counter._value += 1;
        }
    }

    /**
     * @dev Decrements the counter by 1.
     *
     * Requirements:
     * - The counter must be greater than 0.
     */
    function decrement(Counter storage counter) internal {
        uint256 value = counter._value;
        require(value > 0, "Counters: decrement overflow");
        unchecked {
            counter._value = value - 1;
        }
    }

    /**
     * @dev Resets the counter to zero.
     */
    function reset(Counter storage counter) internal {
        counter._value = 0;
    }
}
